#!/usr/bin/env bash

# fail on error
set -e

# the echo explains it all
if [ `uname` != "Darwin" ]; then
  echo "Sorry, this script only works in OS X."
  exit 1
fi

# define the markers - everything we generate will be between those two lines
MARKER_BEGIN="##### BEGIN VAGRANT PASSWORDLESS SUDO #####"
MARKER_END="##### END VAGRANT PASSWORDLESS SUDO #####"

# copy the content of /etc/sudoers to a temporary sudoers file
TMP_SUDOERS=$(mktemp -t vagrant_sudoers)
cat /etc/sudoers > "$TMP_SUDOERS"

# remove any previously added instructions from the temporary sudoers file,
# along with the markers themselves
sed -i -e "/^$MARKER_BEGIN\$/,/^$MARKER_END\$/d" "$TMP_SUDOERS"

# add new instructions to temporary sudoers file
# TODO: make this configurable based on currently installed vagrant plugins
cat >> "$TMP_SUDOERS" <<EOF
$MARKER_BEGIN
###
### Generated by vagrant-passworless-sudo, modify at your own risk!
###

# NFS commands
Cmnd_Alias VAGRANT_EXPORTS_ADD = /usr/bin/tee -a /etc/exports
Cmnd_Alias VAGRANT_NFSD_RESTART = /sbin/nfsd restart
Cmnd_Alias VAGRANT_EXPORTS_REMOVE = /usr/bin/sed -E -e /*/ d -ibak /etc/exports
%staff ALL=(root) NOPASSWD: VAGRANT_EXPORTS_ADD, VAGRANT_NFSD_RESTART, VAGRANT_EXPORTS_REMOVE

# vagrant-hostsupdater commands
Cmnd_Alias VAGRANT_HOST_ADD = /bin/sh -c echo "*" >> /etc/hosts
Cmnd_Alias VAGRANT_HOST_REMOVE = /usr/bin/sed -i -e /*/ d /etc/hosts
%staff ALL=(root) NOPASSWD: VAGRANT_HOST_ADD, VAGRANT_HOST_REMOVE
$MARKER_END
EOF

# validate temporary sudoers file using visudo
set +e
visudo -c -f "$TMP_SUDOERS" > /dev/null
RES=$?
set -e
if [ $RES -ne 0 ]; then
  echo "Error: visudo check failed, aborting."
  echo "Offending file: $TMP_SUDOERS"
  exit 1
fi

# overwrite the old sudoer file
cat "$TMP_SUDOERS" > /etc/sudoers

# remove the temporary sudoers file
rm -rf "$TMP_SUDOERS"

echo "All done, Vagrant should not ask for your sudo password anymore!"
exit 0
